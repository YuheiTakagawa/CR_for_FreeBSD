include scripts/msg.mk
include scripts/tools.mk

CFLAG = -Wall
CFLAG += -D_WITH_DPRINTF

SRC_DIR = ./src
INCLUDE = -I ./include
INCLUDE += -I ./include/asm
INCLUDE += -I ./
INCLUDE += -I ./images


UNAME := ${shell uname}
ifeq ($(UNAME), Linux)
# for Linux include file
SRC_DEP = ./src/linux
CFLAG += -D_LINUX
endif

ifeq ($(UNAME), FreeBSD)
# for FreeBSD include file
SRC_DEP = ./src/freebsd
CFLAG += -lprotobuf-c
CFLAG += -lprocstat
CFLAG += -lpthread
CFLAG += -D_BSD
OBJ += compel/infect.a
#OBJ += soccr/libsoccr.a
OBJ += images/built-in.o
endif

ifneq ($(UNAME), Linux)
ifneq ($(UNAME), FreeBSD)
	$(error ("Sorry, unsupported"))
endif
endif


OBJ += $(SRC_DIR)/files.o
OBJ += $(SRC_DIR)/util.o
OBJ += $(SRC_DIR)/log.o
OBJ += $(SRC_DIR)/scm-code.o
OBJ += $(SRC_DIR)/cr-errno.o
OBJ += $(SRC_DIR)/cr-service.o
OBJ += $(SRC_DIR)/bfd.o
OBJ += $(SRC_DIR)/image.o
OBJ += $(SRC_DIR)/image-desc.o
OBJ += $(SRC_DIR)/protobuf.o
OBJ += $(SRC_DIR)/protobuf-desc.o
#OBJ += $(SRC_DIR)/proc_parse.o

OBJ += $(SRC_DEP)/ptrace.o
OBJ += $(SRC_DEP)/parasite_syscall.o
OBJ += $(SRC_DEP)/fds.o
OBJ += $(SRC_DEP)/register.o
OBJ += $(SRC_DEP)/getmap.o


COBJ += $(SRC_DIR)/getmem.o
COBJ += $(SRC_DIR)/getall.o


ROBJ += $(SRC_DIR)/setmem.o
ROBJ += $(SRC_DIR)/breakpoint.o
ROBJ += $(SRC_DIR)/restore.o

%.o: %.c
	$(Q) $(CC) $(INCLUDE) $(CFLAG) -c -o $@ $^

images/built-in.o:
	$(GNUMAKE) -e -C images built-in.o

compel/infect.a:
	$(GNUMAKE) -e -C compel

soccr/libsoccr.a:
	$(GNUMAKE) -e -C soccr

target = crtools

.PHONY: all
all: $(target)


crtools: $(ROBJ) $(COBJ) $(OBJ)
	$(call msg-gen, $@)
	$(Q) $(CC) $(CFLAG) $(INCLUDE) $^ $(SRC_DIR)/crtools.c -o $@

.PHONY: install
install: crtools
	install $^ /usr/local/sbin/criu

.PHONY: clean
clean:
	$(call msg-clean, "criu")
	$(Q) $(RM) $(target) $(OBJ) $(COBJ) $(ROBJ)
	$(Q) $(GNUMAKE) -e -C compel clean
